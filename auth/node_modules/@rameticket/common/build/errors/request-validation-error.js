"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.RequestValidationError = void 0;
const CustonError_abstract_1 = require("./CustonError-abstract");
class RequestValidationError extends CustonError_abstract_1.CustomError {
    constructor(errors) {
        super('Invalid Request parameters');
        this.errors = errors;
        this.statusCode = 400;
        Object.setPrototypeOf(this, RequestValidationError.prototype);
    }
    serializeError() {
        return (this.errors.map((error) => {
            if (error.type == 'field') {
                return { message: error.msg, field: error.path };
            }
            return { message: error.msg };
        }));
    }
}
exports.RequestValidationError = RequestValidationError;
